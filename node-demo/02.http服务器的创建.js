
// 1.引入http服务
var http = require('http');
// 2.创建http服务
// 根据客户端（浏览器请求的地址不同，向前端发送不同的数据。
// 只要服务器收到客户端的http请求，就回来触发回调函数。
var server = http.createServer(function (req,res) {
    // 服务器，收到请求的时候触发。

    // req:请求对象
    // res:响应对象

    // req.url：保存的是请求的路径信息。
    // req.method:保存的是请求方法。
    

    //  路由：根据用户请求的路径，向用户发送不同的数据、页面
    if (req.url == '/index') {
        //  发送'welcome to index'
        res.write('welcome to index')
    }else if (req.url == '/login'){
        //  发送'please login'
        res.write('please login')
    }
    
    // 跟http服务器，进行连接是通过3次握手进行连接的，
    // 而分手也是，经过四次的握手进行分离的，断开这个链接的。
    // 如果没有断开连接，服务器会认为还有数据要传送，
    // 断开连接呢，是在服务器端，进行断开连接的。

    // 当我们是像服务端发送完数据之后呢，是需要我们在服务器端断开当前这个连接的。
    // 如何断开链接呢？通过res.end()方法。
    
    // res.end()断开链接
    res.end();
});
// 3.监听端口号
server.listen(8888,function(){
    // 回调函数，会在服务器启动完毕后触发！
    console.log('load success');
});

// 现在呢，架设了一个简单的http服务器了，
// 只不过这个http服务器，他能做的事情，非常非常的有限。
// 根据前端请求的路径，来向前端发送一些数据。
// 我们还没有向前端发送什么HTML页面，
// 不过不要着急，
// 接下来，我们会学习，基础的，比如：fs模块。
// 只有我们学习了fs模块，我们才能向前端发送，各种各样的数据，各种各样的页面。。



// 总结：
// 我们要创建一个http服务器，如何创建呢？
// 我们要经过3个步骤；
// 第一步，引入http模块。
// 第二步，创建这个服务
// 第三步，监听这个端口号。

// 把这三步做完之后呢，我们在创建（http.createServer里面）这个回调函数里面来架设路由，
// 那么这个回调函数有两个参数：
// 第一个参数,req,表示我们的请求对象。
// 所有从客户端请求提交上来的数据,我们可以从req里面拿到手。
// 第二个参数,res,表示响应对象。
// 服务器，想向客户端响应数据，可以经过res对象来向前端去响应，
// req里面有一个属性，叫做url属性。
// 这个url属性保存的是我们的请求路径。
// 而req里面还有一个属性，叫做method属性。
// 这个method属性保存的是当前网页的请求方法（GET/POST）。

// 我们可以根据req下的url属性。
// 来判断用户当前请求路径，到底那个路径，
// 我们也可以利用这个属性，来判断我们的路由了
// 去架设路由，向前端发送数据，
// 那么如何向前端发送数据呢？

// 借助res下的write来向前端发送数据。
// 数据发送完了，
// 我们一定要记得，我们要把我们这个链接断开。
// 如果我们服务器端，不主动断开链接的话，
// 客户端会一直保持一个长链接的状态。

// 以上就是全部内容。